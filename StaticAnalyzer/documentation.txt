Indicator.py: 
How do we define a malicious file ?
Using a set of Metrics

1. YARA Rules
2. Suspicious Functions
3. Weird Section Names
4. Use of URLs (Internet Connections)
// Kammeli ya Mariam

"Suspicious Functions", "Weird Section Names" and "Use of URLs" are combined into a total score, 
where sus fns and urls have low weights since they are present in most safe files
and weird section names is a cutoff criteria since we have only seen it in malicious files and not all of them 7atta

Functions Logic:
1. check_suspicious_functions(pe)
    Takes a pe and checks if it has an import table (file that lists external functions (from DLLs)), 
    if it does, python script goes through each imported function from DLLs 
    Decodes the byte string to a regular string using UTF-8. Errors are ignored
    and compares them to a predefined list (SUSPICIOUS_FUNCTIONS)
    then returns the count of these functions and their names 
    
2. check_weird_sections(pe)
    same as sus_fns but for section names

3. check_url_requests(file_path)
    checks a file for embedded URLs, which can indicate suspicious behavior (like calling a malicious server)
    Opens the file in binary mode:
    Reads the fileâ€™s raw binary content.
    Tries to decode the content into a UTF-8 string:
    Uses a regex pattern to extract URLs: